:root {
    --bg: #0b1020;
    --fg: #eef2ff;
    --muted: #cdd0e0;
    --card: #131a33;
    --card2: #0f1530;
    --accent1: #8b5cf6;
    --accent2: #6366f1;
    --accent3: #ec4899;
    --ring: rgba(255, 255, 255, .15);
    --ok: #10b981;
    --warn: #d68b0a;
    --bad: #ef4444;
    --edit: linear-gradient(90deg, #3b82f6, #8b5cf6);
    --del: linear-gradient(90deg, #ef4444, #ff4d94);
    --exp: #ff0000ff;
    --inc: #09ff00ff;
    --sav: #00e1ffff;
}

* {
    box-sizing: border-box;
    font-family: 'Brush Script MT', cursive;
}

html,
body {
    height: 100%
}

body {
    margin: 0;
    font-family: 'Brush Script MT', cursive;
    background: linear-gradient(120deg, #121a3a 0%, #090f1f 100%);
    color: var(--fg)
}

.container {
    width: 100vw;
    max-width: none;
    margin: 0;
    padding: 16px 16px;
    height: 100vh;
    display: flex;
    flex-direction: column
}

.header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 24px
}

.brand {
    font-weight: 800;
    font-size: 28px;
    text-shadow: 0 0 16px rgba(139, 92, 246, .6)
}

.nav__link[title] {
    position: relative;
}

.nav__link[title]:hover::after {
    content: attr(title);
    position: absolute;
    bottom: -34px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.85);
    color: #fff;
    padding: 6px 10px;
    border-radius: 6px;
    font-size: 12px;
    white-space: nowrap;
    z-index: 10;
    opacity: 1;
    pointer-events: none;
}

.nav__link[title]:hover::before {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    border-width: 6px;
    border-style: solid;
    border-color: rgba(0, 0, 0, 0.85) transparent transparent transparent;
    z-index: 10;
}

.nav__link {
    display: inline-block;
    padding: 10px 14px;
    border-radius: 12px;
    background: var(--card);
    border: 1px solid var(--ring);
    color: var(--fg);
    text-decoration: none;
    margin-left: 8px;
    position: relative;
    overflow: hidden;
}

.nav__link:hover {
    background: #1a2247
}

.nav__link--primary {
    background: linear-gradient(90deg, var(--accent2), var(--accent3));
    border-color: transparent;
    color: #fff;
    box-shadow: 0 8px 20px rgba(99, 102, 241, .35);
    transition: transform .15s ease, filter .2s ease, box-shadow .2s ease;
}

.nav__link--primary:hover {
    filter: brightness(1.06);
    transform: translateY(-1px);
    box-shadow: 0 10px 26px rgba(236, 72, 153, .35);
}

.nav__link--glow::before {
    content: "";
    position: absolute;
    top: -150%;
    left: -50%;
    width: 50%;
    height: 400%;
    transform: rotate(25deg);
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, .25), transparent);
    opacity: .0;
    transition: opacity .2s ease, left .5s ease;
}

.nav__link--glow:hover::before {
    opacity: .8;
    left: 120%;
}

.main {
    display: grid;
    gap: 16px;
    flex: 1;
    /* Allow the dashboard to scroll vertically when content exceeds the viewport */
    overflow-y: auto;
    overflow-x: hidden
}

.main>section {
    min-height: 0
}

.main--dashboard {
    grid-template-rows: auto 1fr 1fr
}

.main--manage {
    grid-template-rows: 1fr auto
}

.card {
    background: radial-gradient(1200px 600px at -30% -30%, rgba(139, 92, 246, .15), transparent 60%), radial-gradient(1000px 500px at 130% 10%, rgba(99, 102, 241, .12), transparent 60%), var(--card);
    border: 1px solid var(--ring);
    border-radius: 20px;
    padding: 18px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, .35);
    display: flex;
    flex-direction: column;
    min-height: 0
}

.card canvas {
    flex: 1;
    max-height: 100%
}

.card__title {
    margin: 0 0 10px 0;
    font-size: 20px;
    font-weight: 700
}

.grid {
    display: grid;
    gap: 16px;
    min-height: 0
}

.grid--kpi {
    grid-template-columns: repeat(4, minmax(0, 1fr))
}

.grid--charts {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    grid-auto-rows: 1fr
}

.grid--half {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    grid-auto-rows: 1fr
}

.grid--manage {
    display: grid;
    grid-template-columns: 1.2fr 1.2fr 1fr;
    grid-template-rows: 0.55fr 0.45fr 1fr;
    grid-gap: 1rem;
    height: 100%;
}

.card--txnform {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
}

.card--remaining {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
}

.card--categories {
    grid-column: 1 / 2;
    grid-row: 3 / 4;
}

.card--goals {
    grid-column: 2 / 3;
    grid-row: 1 / 3;
}

.card--debts {
    grid-column: 2 / 3;
    grid-row: 3 / 4;
}

.card--transactions {
    grid-column: 3 / 4;
    grid-row: 1 / 4;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

.card--transactions .stack {
    flex: 1;
    min-height: 0;
}

#txnList {
    flex: 1;
    min-height: 0;
    overflow: auto;
}


.remaining-amt {
    font-size: 28px;
    font-weight: 800;
    line-height: 1.1;
    margin-top: 6px;
}

.remaining-note {
    /* margin-top: 6px; */
    font-size: 0.9rem;
    color: var(--muted);
}

.pace-info {
    margin-top: 6px;
    font-size: 0.9rem;
    color: var(--muted);
}

.card.card--remaining {
    background: radial-gradient(800px 400px at -20% -30%, rgba(139, 92, 246, .12), transparent 60%),
        radial-gradient(700px 350px at 120% 0%, rgba(99, 102, 241, .10), transparent 60%),
        var(--card2);
}

.fill {
    flex: 1;
    min-height: 0
}

#debtName {
  text-transform: capitalize;
}

#catForm.Name {
  text-transform: capitalize;
}

#goalName {
  text-transform: capitalize;
}

@media (max-width:1024px) {
    .grid--charts {
        grid-template-columns: 1fr
    }

    .grid--kpi {
        grid-template-columns: repeat(2, 1fr)
    }

    .grid--half {
        grid-template-columns: 1fr
    }

    .grid--manage {
        grid-template-columns: 1fr;
        grid-template-rows: auto;
    }

    .card--transactions {
        grid-column: auto;
        grid-row: auto
    }
}

.stack>*+* {
    margin-top: 10px
}

.scroll {
    /* Only scroll vertically – horizontal overflow is hidden to prevent awkward layouts */
    overflow-y: auto;
    overflow-x: hidden;
    padding-right: 6px;
    scrollbar-width: thin;
    scrollbar-color: rgba(99, 102, 241, .6) transparent
}

.scroll::-webkit-scrollbar {
    width: 8px;
    height: 8px
}

.scroll::-webkit-scrollbar-track {
    background: linear-gradient(180deg, rgba(99, 102, 241, .08), rgba(236, 72, 153, .08));
    border-radius: 8px
}

.scroll::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, rgba(99, 102, 241, .9), rgba(236, 72, 153, .9));
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(99, 102, 241, .6)
}

.scroll:hover::-webkit-scrollbar-thumb {
    box-shadow: 0 0 14px rgba(236, 72, 153, .8)
}

/* ---------- Alert pop‑ups ---------- */
/* The container that holds all alert messages.  It’s positioned
   in the top‑right corner of the viewport so notifications
   appear unobtrusively.  Each alert is stacked vertically with
   a bit of space in between. */
#alert-container {
    position: fixed;
    top: 15px;
    right: 15px;
    z-index: 9999;
    display: flex;
    flex-direction: column;
    gap: 10px;
    pointer-events: none; /* allow clicks to pass through to page */
}

/* Base style for a single alert.  It uses the existing dark card
   colours so it blends nicely with the rest of the UI.  The
   message wraps onto multiple lines as needed to prevent
   horizontal overflow. */
.alert {
    background: var(--card2);
    border: 1px solid var(--ring);
    color: var(--fg);
    padding: 12px 16px;
    border-radius: 8px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, .45);
    max-width: 325px;
    word-break: break-word;
    animation: slideIn .3s ease;
    pointer-events: all; /* allow pointer events on the alert itself */
}

/* Variants for error and warning alerts.  They re‑use the
   semantic colours defined at the top of the stylesheet. */
.alert--error {
    /* Use solid background for error alerts and white text */
    border-color: var(--bad);
    height: 65px;
    background: var(--bad);
    color: var(--fg);
}

.alert--info {
    /* Use solid background for error alerts and white text */
    border-color: var(--ok);
    height: 65px;
    background: var(--ok);
    color: var(--fg);
}

.alert--warn {
    /* Use solid background for warning alerts and white text */
    border-color: var(--warn);
    height: 65px;
    background: var(--warn);
    color: var(--fg);
}

/* Simple slide‑in animation when an alert appears. */
@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* ---------- Confirm modal ---------- */
/* Full screen semi‑transparent overlay used for confirmation prompts. */
#confirm-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
}

/* The confirmation dialog box itself.  It leverages the existing
   card colours to blend with the design. */
.confirm-dialog {
    background: var(--card2);
    border: 1px solid var(--ring);
    border-radius: 16px;
    padding: 24px;
    min-width: 260px;
    max-width: 90vw;
    color: var(--fg);
    box-shadow: 0 10px 30px rgba(0, 0, 0, .4);
    text-align: center;
}

.row {
    display: flex;
    gap: 12px;
    align-items: center
}

.form {
    display: grid;
    gap: 10px
}

.form--2col {
    grid-template-columns: repeat(2, minmax(0, 1fr))
}

.form--3col {
    grid-template-columns: repeat(3, minmax(0, 1fr))
}

.form input,
.form select {
    padding: 10px 12px;
    background: var(--card2);
    color: var(--fg);
    border: 1px solid var(--ring);
    border-radius: 12px;
    outline: none
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="date"]::-webkit-calendar-picker-indicator {
    filter: invert(1) contrast(1.2) opacity(.9);
    cursor: pointer
}

/* Hide hidden inputs completely so they don’t occupy space in CSS grids */
input[type="hidden"] {
    display: none !important;
}

input[type="date"] {
    color-scheme: light;
}

.form input:focus,
.form select:focus {
    border-color: var(--accent2);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, .25)
}

.btn {
    padding: 10px 14px;
    border-radius: 12px;
    border: 1px solid var(--ring);
    cursor: pointer;
    font-weight: 700
}

.btn--primary {
    font-size: 0.9rem;
    background: linear-gradient(90deg, var(--accent2), var(--accent3));
    color: white
}

.btn--primary:hover {
    filter: brightness(1.05)
}

.btn--ghost {
    background: transparent;
    color: var(--fg)
}

.card .form+.stack {
    margin-top: 12px;
}

.kpi {
    position: relative;
    background: var(--card);
    border: 1px solid var(--ring);
    border-radius: 18px;
    padding: 16px
}

.kpi__label {
    font-size: 12px;
    text-transform: uppercase;
    color: var(--muted)
}

.kpi__value {
    font-size: 28px;
    font-weight: 800;
    margin-top: 6px;
    /* prevent overly long numbers from overflowing their container */
    word-break: break-word;
}

.kpi__sub {
    font-size: 12px;
    color: var(--muted);
    margin-top: 4px
}

::placeholder {
    color: rgba(255, 255, 255, .8);
    opacity: 1
}

input,
select,
textarea {
    color: var(--fg)
}

